{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: [],\n  reducers: {\n    addTask: (state, action) => {\n      let a = 0;\n      const length = JSON.parse(JSON.stringify(state)).length;\n      const newTask = {\n        id: length,\n        name: action.payload.task\n      };\n      state.push(newTask);\n    },\n    deleteTask: (state, action) => {\n      return state.filter(item => item.id !== action.payload.id);\n    },\n    editTask: (state, action) => {\n      console.log(action.payload.id);\n      const todoList = JSON.parse(JSON.stringify(state));\n      return todoList.map(item => {\n        if (item.id === action.payload.id) {\n          return {\n            ...item,\n            name: action.payload.task\n          };\n        }\n        return item;\n      });\n    }\n  }\n});\nexport const {\n  addTask,\n  deleteTask,\n  editTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","tasksSlice","name","initialState","reducers","addTask","state","action","a","length","JSON","parse","stringify","newTask","id","payload","task","push","deleteTask","filter","item","editTask","console","log","todoList","map","actions","reducer"],"sources":["/Users/Sajawalkhan/Desktop/TaskToDo/task-todo/src/redux/tasksSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const tasksSlice = createSlice({\n    name: \"tasks\",\n    initialState:[],\n    reducers:{\n        \n        addTask: (state, action)=>{\n             let a=0;\n             const length = JSON.parse(JSON.stringify(state)).length\n            const newTask = {\n                id: length,\n               name: action.payload.task\n            }\n            state.push(newTask);\n        },\n        deleteTask: (state, action)=>{\n            return state.filter((item) => item.id !== action.payload.id);\n        },\n        editTask: (state, action) => {\n          \n\n            console.log(action.payload.id)\n            const todoList = JSON.parse(JSON.stringify(state));\n            return todoList.map(item => {\n                if(item.id === action.payload.id){\n                    return {\n                        ...item, name: action.payload.task\n                    }\n                }\n                return item;\n            });\n        }\n    }\n    \n        \n});\n\nexport const {addTask, deleteTask,editTask} = tasksSlice.actions;\n\nexport default tasksSlice.reducer;\n\n\n\n\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IAELC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MACrB,IAAIC,CAAC,GAAC,CAAC;MACP,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,CAACG,MAAM;MACxD,MAAMI,OAAO,GAAG;QACZC,EAAE,EAAEL,MAAM;QACXP,IAAI,EAAEK,MAAM,CAACQ,OAAO,CAACC;MACxB,CAAC;MACDV,KAAK,CAACW,IAAI,CAACJ,OAAO,CAAC;IACvB,CAAC;IACDK,UAAU,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAG;MACzB,OAAOD,KAAK,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKP,MAAM,CAACQ,OAAO,CAACD,EAAE,CAAC;IAChE,CAAC;IACDO,QAAQ,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK;MAGzBe,OAAO,CAACC,GAAG,CAAChB,MAAM,CAACQ,OAAO,CAACD,EAAE,CAAC;MAC9B,MAAMU,QAAQ,GAAGd,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC;MAClD,OAAOkB,QAAQ,CAACC,GAAG,CAACL,IAAI,IAAI;QACxB,IAAGA,IAAI,CAACN,EAAE,KAAKP,MAAM,CAACQ,OAAO,CAACD,EAAE,EAAC;UAC7B,OAAO;YACH,GAAGM,IAAI;YAAElB,IAAI,EAAEK,MAAM,CAACQ,OAAO,CAACC;UAClC,CAAC;QACL;QACA,OAAOI,IAAI;MACf,CAAC,CAAC;IACN;EACJ;AAGJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACf,OAAO;EAAEa,UAAU;EAACG;AAAQ,CAAC,GAAGpB,UAAU,CAACyB,OAAO;AAEhE,eAAezB,UAAU,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}